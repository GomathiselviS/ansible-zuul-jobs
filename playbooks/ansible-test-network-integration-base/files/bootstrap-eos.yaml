---
- hosts: appliance
  gather_facts: false
  connection: network_cli
  tasks:
    - name: lookup SSH public key (FIPS)
      set_fact:
        _ssh_key: "{{ lookup('file', '~/.ssh/id_ecdsa.pub') }}"
      when: "'libssh' in zuul.job"

    - name: Setup zuul ssh key (FIPS)
      become: true
      eos_config:
        lines:
          - "username zuul sshkey {{ _ssh_key.split()[0] }} {{ _ssh_key.split()[1] }}"
        save_when: always
      when: "'libssh' in zuul.job"

    - name: Setup eAPI password for zuul user
      become: true
      become_method: enable
      eos_config:
        lines:
          - username zuul secret superSecretPass
        save_when: always

- hosts: controller
  connection: local
  tasks:
    - name: Install pexpect requirement
      pip:
        name: pexpect
        executable: /usr/bin/pip3
        extra_args: --user
      when: ansible_python['version'].major == 3

    - name: Install pexpect requirement
      pip:
        name: pexpect
        extra_args: --user
      when: ansible_python['version'].major == 2

- hosts: controller
  gather_facts: false
  connection: local
  tasks:
    - name: Enable eAPI access with default configuration
      expect:
        command: "ssh {{ hostvars['eos-4.20.10'].ansible_host }}"
        responses:
          '^.*>$': enable
          '^.*[^\)]#$':
            - config terminal
            - exit
          '^.*\(config\)#$':
            - management api http-commands
            - write memory
            - exit
          '^.*\(config-mgmt-api-http-cmds\)#$':
            - protocol http
            - protocol https
            - protocol unix-socket
            - no shutdown
            - exit
        timeout: 60
